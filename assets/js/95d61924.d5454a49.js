"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[45934],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},o=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=u(n),k=r,c=d["".concat(p,".").concat(k)]||d[k]||m[k]||i;return n?a.createElement(c,l(l({ref:t},o),{},{components:n})):a.createElement(c,l({ref:t},o))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},53691:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const i={id:"uint256",title:"Namespace: uint256",sidebar_label:"uint256",sidebar_position:0,custom_edit_url:null},l=void 0,s={unversionedId:"API/namespaces/uint256",id:"API/namespaces/uint256",title:"Namespace: uint256",description:"References",source:"@site/docs/API/namespaces/uint256.md",sourceDirName:"API/namespaces",slug:"/API/namespaces/uint256",permalink:"/starknet.js/docs/next/API/namespaces/uint256",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"uint256",title:"Namespace: uint256",sidebar_label:"uint256",sidebar_position:0,custom_edit_url:null},sidebar:"defaultSidebar",previous:{title:"types",permalink:"/starknet.js/docs/next/API/namespaces/types"},next:{title:"starkCurve",permalink:"/starknet.js/docs/next/API/namespaces/ec.starkCurve"}},p={},u=[{value:"References",id:"references",level:2},{value:"Uint256",id:"uint256",level:3},{value:"Variables",id:"variables",level:2},{value:"UINT_128_MAX",id:"uint_128_max",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"UINT_256_MAX",id:"uint_256_max",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"Functions",id:"functions",level:2},{value:"uint256ToBN",id:"uint256tobn",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"isUint256",id:"isuint256",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"bnToUint256",id:"bntouint256",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-4",level:4}],o={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("h3",{id:"uint256"},"Uint256"),(0,r.kt)("p",null,"Re-exports ",(0,r.kt)("a",{parentName:"p",href:"/starknet.js/docs/next/API/interfaces/types.Uint256"},"Uint256")),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"uint_128_max"},"UINT","_","128","_","MAX"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"UINT","_","128","_","MAX"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"bigint")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/starknet-io/starknet.js/blob/develop/src/utils/uint256.ts#L9"},"src/utils/uint256.ts:9")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"uint_256_max"},"UINT","_","256","_","MAX"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"UINT","_","256","_","MAX"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"bigint")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/starknet-io/starknet.js/blob/develop/src/utils/uint256.ts#L10"},"src/utils/uint256.ts:10")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"uint256tobn"},"uint256ToBN"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"uint256ToBN"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"uint256"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"bigint")),(0,r.kt)("p",null,"Convert Uint256 to bigint"),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/starknet.js/docs/next/API/interfaces/types.Uint256"},(0,r.kt)("inlineCode",{parentName:"a"},"Uint256")))))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bigint")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/starknet-io/starknet.js/blob/develop/src/utils/uint256.ts#L15"},"src/utils/uint256.ts:15")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"isuint256"},"isUint256"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isUint256"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"bn"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Test BigNumberish is smaller or equal 2**256-1"),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bn")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/starknet.js/docs/next/API/namespaces/types#bignumberish"},(0,r.kt)("inlineCode",{parentName:"a"},"BigNumberish")))))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/starknet-io/starknet.js/blob/develop/src/utils/uint256.ts#L22"},"src/utils/uint256.ts:22")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bntouint256"},"bnToUint256"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"bnToUint256"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"bn"),"): ",(0,r.kt)("a",{parentName:"p",href:"/starknet.js/docs/next/API/interfaces/types.Uint256"},(0,r.kt)("inlineCode",{parentName:"a"},"Uint256"))),(0,r.kt)("p",null,"Convert BigNumberish (string | number | bigint) to Uint256 (hex)"),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bn")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/starknet.js/docs/next/API/namespaces/types#bignumberish"},(0,r.kt)("inlineCode",{parentName:"a"},"BigNumberish")))))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/starknet.js/docs/next/API/interfaces/types.Uint256"},(0,r.kt)("inlineCode",{parentName:"a"},"Uint256"))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/starknet-io/starknet.js/blob/develop/src/utils/uint256.ts#L29"},"src/utils/uint256.ts:29")))}m.isMDXComponent=!0}}]);